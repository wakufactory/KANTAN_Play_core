; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
; default_envs = native_x86
; default_envs = native_m1mac
; default_envs = esp32s3_arduino
; default_envs = esp32_arduino
; default_envs = esp32_idf
default_envs = release_s3
src_dir = main
lib_dir = components

[env]
lib_deps =
    bblanchon/ArduinoJson @ ^7.3.0
    M5Stack/M5Unified

[env:native_x86]
platform = native
build_type = debug
build_flags = -O0 -xc++ -std=c++17 -lSDL2 -lwinmm
  -lkantan-music
  -L"./main/kantan-music/x86"
  -I"/usr/local/include/SDL2"                ; for intel mac homebrew SDL2
  -L"/usr/local/lib"                         ; for intel mac homebrew SDL2
  -DM5GFX_SCALE=2
  -DM5GFX_ROTATION=1
  -DM5GFX_BOARD=board_M5StackCore2
  -DM5GFX_SHOW_FRAME
  -DM5GFX_SHORTCUT_MOD=KMOD_LALT

[env:native_m1mac]
platform = native
build_type = debug
build_flags = -O0 -xc++ -std=c++17 -lSDL2
  -lkantan-music
  -L"./main/kantan-music/m1mac"
;  -fgnu89-inline
  -arch arm64                                ; for arm mac
  -I"${sysenv.HOMEBREW_PREFIX}/include" ; for arm mac homebrew SDL2
  -I"${sysenv.HOMEBREW_PREFIX}/include/SDL2" ; for arm mac homebrew SDL2
  -L"${sysenv.HOMEBREW_PREFIX}/lib"          ; for arm mac homebrew SDL2
  -DM5GFX_SCALE=2
  -DM5GFX_ROTATION=1
  -DM5GFX_BOARD=board_M5StackCore2
  -DM5GFX_SHOW_FRAME

[esp32_base]
build_type = debug
; platform = espressif32
; platform = espressif32@6.9.0
; platform = espressif32@6.11.0

; platform = https://github.com/pioarduino/platform-espressif32/releases/download/51.03.07/platform-espressif32.zip

; platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.10/platform-espressif32.zip

; platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.11/platform-espressif32.zip

; I2S の初期化で user context not in internal RAM エラーが出る
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.13-1/platform-espressif32.zip

; USB-HUB動作NG
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.13/platform-espressif32.zip

; USB-HUB動作OK
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip

; USB-HUB動作OK
platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.21/platform-espressif32.zip

board = m5stack-core2
board_build.f_cpu = 80000000L
board_build.f_flash = 80000000L
board_build.flash_mode = qio
board_build.partitions = default_16MB.csv
; board_build.partitions = app3M_fat9M_16MB.csv
upload_speed = 1500000
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
build_unflags = 
; -D ARDUINO_USB_MODE
build_flags =
    -lkantan-music
    -L"./main/kantan-music/esp32"
    -DBOARD_HAS_PSRAM=1
    -DUSE_UTF8_LONG_NAMES=1
    ; -DENABLE_USB_HUBS=1
    ; -DCONFIG_USB_HOST_HUBS_SUPPORTED=1
    ; -DCONFIG_USB_HOST_HUB_MULTI_LEVEL=1
    ; -DARDUINO_USB_MODE=0
    ; -DCORE_DEBUG_LEVEL=5
    ; -DARDUINO_USB_CDC_ON_BOOT=1
    ; -DUSE_TINYUSB=true
lib_deps = ${env.lib_deps}
    SdFat
  
[env:esp32_arduino]
extends = esp32_base
framework = arduino
build_unflags = ${esp32_base.build_unflags}
build_flags = ${esp32_base.build_flags}
    -DCORE_DEBUG_LEVEL=5
    -Wall -Wextra -Wreturn-local-addr -Werror=format -Werror=return-local-addr

[env:esp32s3_arduino]
extends = esp32_base
framework = arduino
board = m5stack-cores3
; board = esp32-s3-devkitc-1
build_unflags = ${esp32_base.build_unflags}
build_flags = ${esp32_base.build_flags}
    -DCORE_DEBUG_LEVEL=5
    -Wall -Wextra -Wreturn-local-addr -Werror=format -Werror=return-local-addr

[env:esp32_idf]
extends = esp32_base
framework = espidf

[env:release]
extends = env:esp32_arduino
build_type = release
build_unflags = ${esp32_base.build_unflags}
build_flags = ${esp32_base.build_flags}
    -DCORE_DEBUG_LEVEL=0
    -O2

extra_scripts = post:generate_user_custom.py
custom_firmware_version = 0.1.0
custom_firmware_name = KANTANPLAY-ESP32
custom_firmware_suffix = .bin
custom_firmware_dir = r:\

[env:release_s3]
extends = env:esp32s3_arduino
build_type = release
build_unflags = ${esp32_base.build_unflags}
build_flags = ${esp32_base.build_flags}
    -DCORE_DEBUG_LEVEL=0
    -O2

extra_scripts = post:generate_user_custom.py
custom_firmware_version = 0.1.0
custom_firmware_name = KANTANPLAY-ESP32S3
custom_firmware_suffix = .bin
custom_firmware_dir = r:\

[env:debug_s3]
extends = env:esp32s3_arduino
build_type = release
build_flags = ${esp32_base.build_flags}
    -DCORE_DEBUG_LEVEL=5
    -Wall -Wextra -Wreturn-local-addr -Werror=format -Werror=return-local-addr

extra_scripts = post:generate_user_custom.py
custom_firmware_version = 0.1.0
custom_firmware_name = KANTANPLAY-ESP32S3
custom_firmware_suffix = .bin
custom_firmware_dir = r:\